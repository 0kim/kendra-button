service: scrap

custom:
  stage:  ${opt:stage, 'dev'}
  wsgi:
    app: app.app
    pythonBin: python3
    packRequirements: false
  kendra:
    account: 294038372338
  dynamodb:
    indexDB: kendra-buttons-index-${self:custom.stage}-adf
  pythonRequirements:
    layer: true
  userPoolAuthorizer:
    type: COGNITO_USER_POOLS
    authorizerId:
      Ref: CognitoAuthorizer


provider:
  name: aws
  profile: everypython
  runtime: python3.8
  stage: dev
  region: us-west-2
  environment:
    indexDB: ${self:custom.dynamodb.indexDB}
    PYPPETEER_HOME: '/tmp/'
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:*"
        - "sns:*"
        - "dynamodb:*"
      Resource:
        - "*"

package:
  exclude:
    - .venv/**
    - node_modules/**
  include:
    - bin/**
    - app.py
    - parser/**
    - kendra.py
    - site.py
    - schema.py
    - utils.py
    - __init__.py

functions:
  graphql:
    memorySize: 512
    handler: wsgi_handler.handler
    timeout: 30
    events:
      - http: ANY /
        cors: true
        authorizer: 
          type: COGNITO_USER_POOLS
          authorizerId: 
            Ref: CognitoAuthorizer
      - http: 'ANY /noauth/{proxy+}'
        cors: true
      - http: 'ANY {proxy+}'
        cors: true
        authorizer:
          type: COGNITO_USER_POOLS
          authorizerId: 
            Ref: CognitoAuthorizer
      
    layers:
      - { Ref: PythonRequirementsLambdaLayer }

plugins:
  - serverless-python-requirements
  - serverless-wsgi
resources:
  Resources:
    myDynamoDBTable: 
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: "user"
            AttributeType: "S"
          - AttributeName: "site"
            AttributeType: "S"
        KeySchema: 
          - 
            AttributeName: "user"
            KeyType: "HASH"
          - 
            AttributeName: "site"
            KeyType: "RANGE"
        TableName: "${self:custom.dynamodb.indexDB}"
    CognitoAuthorizer:
      Type: AWS::ApiGateway::Authorizer
      Properties:
        Name: KendraCongnito
        RestApiId:
          Ref: ApiGatewayRestApi
        Type: COGNITO_USER_POOLS
        ProviderARNs: 
          - arn:aws:cognito-idp:us-west-2:213888382832:userpool/us-west-2_tJriOOf7L
        IdentitySource: method.request.header.Authorization