service: scrap

custom:
  stage:  ${opt:stage, 'dev'}
  kendra:
    account: 294038372338
  bucket:
    scrapOrigin: awskrug.openkendra.${self:custom.stage}
  pythonRequirements:
    dockerizePip: true
    layer: true


provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: us-west-2
  environment:
    BUCKET: ${self:custom.bucket.scrapOrigin}
    PYPPETEER_HOME: '/tmp/'
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:*"
        - "sns:*"
      Resource:
        - "*"
package:
  exclude:
    - .venv/**
    - node_modules/**
  include:
    - bin/**
    - parser/**
    - utils.py

functions:
  scrappy:
    handler: handler.handler
    memorySize: 512
    timeout: 600
    layers:
      - { Ref: PythonRequirementsLambdaLayer }
    events:
      - sns: dispatch

plugins:
  - serverless-python-requirements

resources:
  Resources:
    ScrapBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucket.scrapOrigin}
    
    SampleBucketPolicy: 
      Type: AWS::S3::BucketPolicy
      Properties: 
        Bucket: 
          Ref: "ScrapBucket"
        PolicyDocument: 
          Statement: 
            - 
              Action: 
                - "s3:*"
              Effect: "Allow"
              Resource: 
                Fn::Join: 
                  - ""
                  - 
                    - "arn:aws:s3:::"
                    - 
                      Ref: "ScrapBucket"
                    - "/*"
              Principal:
                AWS: "arn:aws:iam::${self:custom.kendra.account}:root"